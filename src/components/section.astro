---
import { Image } from 'astro:assets';

import Button from './button.astro';

const { id, title, image, color, side, book_button } = Astro.props;

const { default: imageSrc } = await import(`../admin/images/${image}.jpg`);
---
<section class={`dynamic-section color--${color} side--${side}`} id={id}>
  <div class="image-wrapper">
    <Image class="image" loading="lazy" src={imageSrc} alt={`Illustration for ${title}`} width="1000" />
  </div>
  <div class="content">
    {
      title && <h3>{title}</h3>
    }
    <slot />
    <Button
      variant={color === 'azure' ? 'outline-white' : 'outline'}
      class="section-learn-more"
      data-section={id}
    >
    Learn more
    </Button>
    {
      book_button && (
      <Button
        as="a"
        class="section-book-button"
        variant={color === 'azure' ? 'white' : 'henna'}
        size="m"
        href={`${import.meta.env.BASE_URL}/booking`}
      >
        Book now
      </Button>
      )
    }
  </div>
</section>

<script>
const learnMoreButtons = document.getElementsByClassName('section-learn-more');

for (const button of learnMoreButtons) {
  const { section: sectionID } = (button as HTMLElement).dataset;
  const section = document.getElementById(sectionID);

  button.addEventListener('click', () => {
    section.classList.add('expanded');
    section.scrollIntoView({ block: 'nearest' });
  });
}
</script>

<style lang="scss">
@import '../styles/breakpoints';

.dynamic-section {
  --expand-transition-time: 300ms;
  --expand-size: 90vw;

  display: grid;

  @include b-desktop {
    transition: grid-template-columns var(--expand-transition-time);
    grid-template-columns: 2fr 3fr;
    overflow: hidden;

    &.side--right {
      grid-template-columns: 3fr 2fr;
    }

    &.expanded {
      grid-template-columns: var(--expand-size) 1fr;

      &.side--right {
        grid-template-columns: 1fr var(--expand-size);
      }
    }
  }
}

.color--azure {
  background-color: var(--color-azure);
  color: var(--color-white);
}

.color--white {
  background-color: var(--color-white);
  color: var(--color-henna);
}

.color--henna {
  background-color: var(--color-henna);
  color: var(--color-white);
}

.color--marble {
  background-color: var(--color-marble);
  color: var(--color-henna);
}

.color--henna,
.color--azure {
  :global(a) {
    --link-color: var(--color-marble);
    --link-color-hover: var(--color-white);
  }
}

.content {
  background-color: inherit;
  padding: 1rem 1rem 0.5rem;
  order: 1;
  position: relative;
  z-index: 1;

  @include b-desktop {
    padding: 6rem 3rem;
    font-size: 24px;
  }

  &::before {
    content: '';
    display: block;
    position: absolute;
    left: -1rem;
    right: -8rem;
    background: inherit;
    clip-path: url(#wave1);
    height: 2rem;
    top: calc(-2rem + 1px);

    .side--right & {
      clip-path: url(#wave2);
    }
  }

  @include b-desktop {
    &::before {
      top: -1rem;
      bottom: -1rem;
      clip-path: url(#wave6);
      width: 3rem;
      height: calc(100% + 1rem);
      left: auto;
      right: calc(-3rem + 1px);

      .side--right & {
        left: calc(-3rem + 1px);
        right: auto;
        clip-path: url(#wave7);
      }
  }
  }

  &::after {
    content: '';
    display: block;
    position: absolute;
    left: -1rem;
    right: -8rem;
    background: inherit;
    clip-path: url(#wave5);
    height: 2rem;
    bottom: calc(-2rem + 1px);
  }

  @include b-desktop {
    &::after {
      content: none;
    }
  }

  :global(iframe) {
    margin: 1rem 0 2rem;
    width: 100%;
    min-height: 20rem;
  }

  .section-learn-more {
    display: none;
  }

  :global(hr), :global(hr) ~ :global(*) {
    display: none;
  }

  :global(hr) ~ .section-learn-more,
  :global(hr) ~ .section-book-button {
    display: inline-block;
  }

  .expanded & {
    > :global(*) {
      animation: fade-in var(--expand-transition-time) var(--expand-transition-time) both;
    }

    @include b-desktop {
      columns: 2;
      gap: 6rem;
    }

    :global(hr) ~ :global(*) {
      display: revert;
      break-inside: avoid;
    }

    :global(hr) ~ .section-learn-more,
    :global(hr) ~ .section-book-button {
      display: none;
    }
  }
}

.image-wrapper {
  max-height: 50vh;
  overflow: hidden;

  @include b-desktop {
    max-height: 100%;
  }
}

.image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@include b-desktop {
  .image-wrapper {
    order: 2;

    .side--right & {
      order: 0;
    }
  }
}

.section-learn-more {
  .side--right &::before {
    content: '« ';
  }

  .side--left &::after {
    content: ' »';
  }
}
</style>
